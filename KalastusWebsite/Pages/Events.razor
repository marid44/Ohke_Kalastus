@page "/events"
@inject KalastusWebsite.Services.EventService EventService
@inject KalastusWebsite.Services.UserSession UserSession

<h1>Tapahtumat</h1>

<div>
    @if (UserSession.IsLoggedIn)
    {
        <h3>Luo uusi tapahtuma</h3>
        <input @bind="NewEventTitle" placeholder="Otsikko" />
        <input type="date" @bind="NewEventDate" />
        <p></p>
        <textarea @bind="NewEventDescription" placeholder="Kuvaus"></textarea>
        <p></p>
        <button @onclick="AddEvent">Lisää</button>
    }
    else
    {
        <p>Kirjaudu sisään, jotta voit lisätä tapahtumia.</p>
    }
</div>

<hr />

<div>
    <h3>Kaikki tapahtumat</h3>
    @if (EventService.GetEvents().Any())
    {
        <ul>
            @foreach (var ev in EventService.GetEvents())
            {
                <li>
                    <strong>@ev.Title</strong> (@ev.Date.ToShortDateString())<br />
                    @ev.Description<br />
                    <em>Luonut: @ev.CreatedBy</em>
                    @if (UserSession.Username == ev.CreatedBy || UserSession.Role == "Admin")
                    {
                        <button @onclick="() => RemoveEvent(ev.Id, UserSession.Username, UserSession.Role)">Poista</button>  <!-- Poista-nappi näkyy vain Adminille -->
                    }

                </li>
            }
        </ul>
    }
    else
    {
        <p>Ei tapahtumia.</p>
    }
</div>

@code {
    private string NewEventTitle = string.Empty;
    private DateTime NewEventDate = DateTime.Now;
    private string NewEventDescription = string.Empty;

    // Väliaikainen lista tapahtumista
    private List<KalastusWebsite.Models.Event> events = new();

    protected override void OnInitialized()
    {
        // Lataa tapahtumat heti komponentin alustuksessa
        events = EventService.GetEvents().ToList();
    }

    private void AddEvent()
    {
        if (!UserSession.IsLoggedIn)
        {
            // Käyttäjä ei ole kirjautunut, näytä virheilmoitus
            Console.WriteLine("Vain kirjautuneet käyttäjät voivat lisätä tapahtumia!");
            return;
        }

        var newEvent = new KalastusWebsite.Models.Event
        {
            Title = NewEventTitle,
            Date = NewEventDate,
            Description = NewEventDescription,
            CreatedBy = UserSession.Username // Tallentaa käyttäjää
        };

        EventService.AddEvent(newEvent);

        // Päivitä tapahtumien lista
        events = EventService.GetEvents().ToList();

        // Tyhjennetään syöttökentät
        NewEventTitle = string.Empty;
        NewEventDate = DateTime.Now;
        NewEventDescription = string.Empty;
    }

    private void RemoveEvent(int id, string username, string role)

    {
    
        EventService.RemoveEvent(id, username, role);

        // Päivitä tapahtumien lista poiston jälkeen
        events = EventService.GetEvents().ToList();
    }
}
