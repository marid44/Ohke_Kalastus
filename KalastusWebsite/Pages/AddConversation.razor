@page "/add-conversation"
@using KalastusWebsite.Services
@using KalastusWebsite.Data
@using KalastusWebsite.Models
@inject AppDbContext _context
@inject NavigationManager NavigationManager
@inject UserSession UserSession
@using Microsoft.EntityFrameworkCore

<h3>Luo keskustelu</h3>
<link href="css/lisääkeskustelu.css" rel="stylesheet">

<div class="form-container">
    @if (UserSession.IsLoggedIn)
    {
        <EditForm Model="newConversation" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary class="validation-summary" />

            <div class="form-group">
                <label for="title">Otsikko:</label>
                <InputText id="title" @bind-Value="newConversation.Title" class="form-control" />
                <ValidationMessage For="@(() => newConversation.Title)" class="validation-message" />
            </div>

            <div class="form-group">
                <label for="content">Sisältö:</label>
                <InputTextArea id="content" @bind-Value="newConversation.Content" class="form-control" />
                <ValidationMessage For="@(() => newConversation.Content)" class="validation-message" />
            </div>

            <button type="submit" class="btn btn-primary">Lähetä keskustelu</button>
        </EditForm>
    }
    else
    {
        <p>You need to log in to add a new conversation.</p>
    }
</div>

@code {
    private Conversation newConversation = new Conversation();

    private async Task HandleValidSubmit()
    {
        newConversation.Username = UserSession.Username;
        newConversation.CreatedAt = DateTime.Now;

        _context.Conversations.Add(newConversation);
        await _context.SaveChangesAsync();

        newConversation = new Conversation();
        NavigationManager.NavigateTo("/conversations");
    }
}
